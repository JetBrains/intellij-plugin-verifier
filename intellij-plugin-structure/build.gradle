plugins {
  id "maven-publish"
  id "com.jfrog.bintray" version "1.8.4"
  id "org.jetbrains.kotlin.jvm" version "1.3.30"
}

ext.kotlin_version = '1.3.30'

def intellijPluginStructureVersion = 'dev'
if (project.hasProperty("structureVersion")) {
  intellijPluginStructureVersion = project.structureVersion
}

configure(allprojects) {
  group = 'org.jetbrains.intellij.plugins'
  version = intellijPluginStructureVersion

  apply plugin: 'java'
  apply plugin: 'kotlin'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
    maven { url "https://repo.maven.apache.org/maven2" }
    maven { url "https://dl.bintray.com/jonnyzzz/maven" }
    maven { url "https://dl.bintray.com/sergey-patrikeev/patrikeev-archiver"  }
    maven { url "https://www.jetbrains.com/intellij-repository/releases" }
    maven { url "https://jetbrains.bintray.com/intellij-third-party-dependencies" }
  }

  dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
  }

  //build .jar with sources
  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  artifacts {
    archives sourcesJar
  }
}

publishing {
  publications {

    def configurePublication = { MavenPublication pub, String projectName ->

      def proj = project(projectName)
      pub.groupId proj.group
      pub.artifactId proj.name
      pub.version proj.version

      pub.from proj.components.java
      proj.artifacts
      pub.artifact proj.sourcesJar
    }

    BasePublication(MavenPublication) { configurePublication(it, ':structure-base') }
    ClassesPublication(MavenPublication) { configurePublication(it, ':structure-classes') }
    IntellijPublication(MavenPublication) { configurePublication(it, ':structure-intellij') }
    IntellijClassesPublication(MavenPublication) { configurePublication(it, ':structure-intellij-classes') }
    IdePublication(MavenPublication) { configurePublication(it, ':structure-ide') }
    IdeClassesPublication(MavenPublication) { configurePublication(it, ':structure-ide-classes') }
    TeamCityPublication(MavenPublication) { configurePublication(it, ':structure-teamcity') }
    DotNetPublication(MavenPublication) { configurePublication(it, ':structure-dotnet') }
    HubPublication(MavenPublication) { configurePublication(it, ':structure-hub') }
  }
}

bintray {
  user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
  key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')


  publish = true
  publications = [
      'BasePublication', 'ClassesPublication', 'IntellijPublication', 'IntellijClassesPublication',
      'IdePublication', 'IdeClassesPublication', 'TeamCityPublication', 'HubPublication', 'DotNetPublication'
  ]

  pkg {
    repo = 'intellij-plugin-service'
    name = 'intellij-plugin-structure'
    licenses = ['Apache-2.0']
    vcsUrl = 'https://github.com/JetBrains/intellij-plugin-verifier'
    userOrg = 'jetbrains'

    version {
      name = project.version
    }
  }
}

bintrayUpload.doFirst {

  if (!bintray.user || !bintray.key) {
    throw new StopExecutionException("You must specify (bintrayUser, bintrayApiKey) or (BINTRAY_USER, BINTRAY_API_KEY) properties")
  }

  println('Uploading IntelliJ structure ' + project.version + ' to bintray')
}

test.dependsOn project(":tests").test
publishToMavenLocal.dependsOn test
bintrayUpload.dependsOn test